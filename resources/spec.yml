openapi: 3.0.1
info:
  title: horntail
  description: https://github.com/wyom1ng/horntail
  contact:
    email: webmaster@wyoming.dev
  version: 1.0.0
paths:
  /{id}:
    get:
      operationId: visitLink
      parameters:
        - in: path
          name: id
          schema:
            type: string
            minLength: 3
            maxLength: 255
          required: true
      responses:
        302:
          description: The long URL
          content:
            text/html: {}
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
      summary: Either redirects to the stored URL (if one exists), or redirects to a predefined 404 page (if one exists) or returns a 404
      tags:
        - public
  /api/v1/link:
    post:
      operationId: generateLink
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateLinkRequestSchema"
      responses:
        200:
          $ref: "#/components/responses/GenerateLinkResponse"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth: [ ]
        - basicAuth: [ ]
      summary: Generates a short link for a given target URL
      tags:
        - link
  /api/v1/link/{id}:
    get:
      operationId: getLink
      parameters:
        - in: path
          name: id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
      responses:
        200:
          $ref: "#/components/responses/GetLinkResponse"
        404:
          $ref: "#/components/responses/NotFound"
        409:
          $ref: "#/components/responses/Conflict"
        500:
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth: [ ]
        - basicAuth: [ ]
      summary: Gets the record for a given short link
      tags:
        - link
    put:
      operationId: createLink
      parameters:
        - in: path
          name: id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutLinkRequestSchema"
      responses:
        200:
          $ref: "#/components/responses/PutLinkResponse"
        201:
          $ref: "#/components/responses/Created"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        409:
          $ref: "#/components/responses/Conflict"
        500:
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth: [ ]
        - basicAuth: [ ]
      summary: Create a short link with specific id
      tags:
        - link
    delete:
      operationId: removeLink
      parameters:
        - in: path
          name: id
          schema:
            type: string
            minLength: 3
            maxLength: 255
          required: true
      responses:
        204:
          $ref: "#/components/responses/NoContent"
        500:
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth: [ ]
        - basicAuth: [ ]
      summary: Delete a short link
      tags:
        - link
  /api/v1/spec:
    get:
      operationId: viewSpec
      responses:
        200:
          description: This page
          content:
            text/html: { }
        500:
          $ref: "#/components/responses/InternalServerError"
      summary: Serve this page
      tags:
        - meta
  /api/v1/spec/{file_name}:
    get:
      operationId: getSpecResource
      parameters:
        - in: path
          name: file_name
          schema:
            type: string
            pattern: '^(?!\w*\.\.)([^/]+)$'
          required: true
      responses:
        200:
          description: The requested resource
          content:
            "*/*":
              schema:
                type: string
                format: binary
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
      summary: OpenAPI related resources
      tags:
        - meta
servers:
  - url: http://localhost:9000/
  - url: https://wyoming.みんな/
components:
  responses:
    GenerateLinkResponse:
      description: "The generated short link"
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/GenerateLinkResponseSchema"
    GetLinkResponse:
      description: "The short link record"
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/GetLinkResponseSchema"
    PutLinkResponse:
      description: "The short link record"
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/PutLinkResponseSchema"
    OK:
      description: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/200
      content: { }
    Created:
      description: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201
      content: { }
    NoContent:
      description: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204
      content: { }
    BadRequest:
      description: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400
      content: { }
    Unauthorized:
      description: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
      content: { }
    Forbidden:
      description: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403
      content: { }
    NotFound:
      description: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404
      content: { }
    Conflict:
      description: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409
      content: {}
    InternalServerError:
      description: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
      content: { }
  schemas:
    LifetimeSeconds:
      type: integer
      description: How long until a link is deleted. Explicitly setting this to 0 disables deletion.
      minimum: 0
    Id:
      type: string
      maxLength: 255
    Url:
      type: string
      pattern: https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)
      format: url
    Timestamp:
      type: string
      format: '%Y-%m-%dT%TZ'
    GenerateLinkRequestSchema:
      type: object
      properties:
        target:
          $ref: "#/components/schemas/Url"
        lifetime_seconds:
          $ref: "#/components/schemas/LifetimeSeconds"
      required:
        - url
    PutLinkRequestSchema:
      type: object
      properties:
        target:
          $ref: "#/components/schemas/Url"
        lifetime_seconds:
          $ref: "#/components/schemas/LifetimeSeconds"
      required:
        - url
    GenerateLinkResponseSchema:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
        short_url:
          $ref: "#/components/schemas/Url"
        available_until:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - short_url
    GetLinkResponseSchema:
      type: object
      properties:
        short_url:
          $ref: "#/components/schemas/Url"
        target:
          $ref: "#/components/schemas/Url"
        created_at:
          $ref: "#/components/schemas/Timestamp"
        available_until:
          $ref: "#/components/schemas/Timestamp"
      required:
        - short_url
        - created_at
    PutLinkResponseSchema:
      type: object
      properties:
        short_url:
          $ref: "#/components/schemas/Url"
        target:
          $ref: "#/components/schemas/Url"
        created_at:
          $ref: "#/components/schemas/Timestamp"
        available_until:
          $ref: "#/components/schemas/Timestamp"
      required:
        - short_url
        - target
        - created_at
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: LoginToken
    basicAuth:
      type: http
      scheme: basic
tags:
  - name: public
    description: the public API
  - name: link
    description: Link CRUD
  - name: meta
    description: Everything about the specification itself
